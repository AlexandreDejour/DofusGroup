name: ðŸš€ Deployment

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deployment through ssh
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            set -e
            cd ~/DofusGroup

            echo "Save actual commit..."
            CURRENT_COMMIT=$(git rev-parse HEAD)

            echo "Update code..."
            git fetch origin main
            git reset --hard origin/main

            echo "Pull base images..."
            docker compose -f docker-compose.prod.yml pull --ignore-pull-failures

            # Detect differences
            echo "Detecting changes in back and front..."
            BUILD_BACK=false
            BUILD_FRONT=false

            MERGE_BASE=$(git merge-base HEAD origin/main@{1})

            if git diff --name-only $MERGE_BASE HEAD | grep -q '^apps/back/'; then
                BUILD_BACK=true
            fi

            if git diff --name-only $MERGE_BASE HEAD | grep -q '^apps/front/'; then
                BUILD_FRONT=true
            fi

            echo "Build and relaunch updated services..."
            if $BUILD_BACK; then
                echo "Rebuild back"
                docker compose -f docker-compose.prod.yml build back
                docker compose -f docker-compose.prod.yml up -d back
            fi

            if $BUILD_FRONT; then
                echo "Rebuild front (nginx)"
                docker compose -f docker-compose.prod.yml build nginx
                docker compose -f docker-compose.prod.yml up -d nginx
            fi

            echo "The unmodified services remain intact"

            echo "Cleanning old images and build cache..."
            docker image prune -af
            docker builder prune -af --filter "until=72h"

            echo "Successfully deploy!"
