services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - front
      - back
  front:
    build:
      context: ./apps/front
    command: ["npm", "run", "start"]
    volumes:
      - ./apps/front:/app
    expose:
      - "5173"
    depends_on:
      - back
    environment:
      - NODE_ENV=development
      - VITE_API_URL=${VITE_API_URL}
      - HOST=0.0.0.0

  back:
    build:
      context: ./apps/back
      dockerfile: Dockerfile
    env_file: .env
    volumes:
      - ./apps/back:/app
      - logs-data:/app/logs
    expose:
      - "3000"
    environment:
      - NODE_ENV=development
      - PG_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
  logs-data:
